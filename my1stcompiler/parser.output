Terminals unused in grammar

   COLON
   NUMBER_TYPE
   STRING_TYPE
   BOOLEAN_TYPE
   CLASS_IDENTIFIER
   STRING
   TRUE
   FALSE
   CONSOLE_LOG
   VAR
   CONST
   RETURN
   FUNCTION
   LBRACKET
   RBRACKET
   LBRACE
   RBRACE
   LPARENTHESES
   RPARENTHESES
   COMMA
   SINGLE_QUOTE
   ADD
   MINUS
   DOT
   DOUBLE_QUOTE
   MULT
   DIV
   EXP
   GT
   LT
   EQ
   BACKTICK
   DOLLAR
   REAL
   NUMERO
   BOOLEAN
   ERROR_LITERAL
   ANY_TYPE
   SUB
   MUL
   LPAREN
   RPAREN
   CRASIS_QUOTE
   '-'
   '+'
   '*'
   '/'
   '^'
   '>'
   '<'
   '='


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration
    3             | declarations declaration

    4 declaration: variavel_declaration SEMICOLON
    5            | variavel_declaration '\n'

    6 variavel_declaration: LET IDENTIFIER ASSIGN expression

    7 expression: NUMBER
    8           | FLOAT
    9           | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 5
'*' (42)
'+' (43)
'-' (45)
'/' (47)
'<' (60)
'=' (61)
'>' (62)
'^' (94)
error (256)
LET (258) 6
COLON (259)
NUMBER_TYPE (260)
STRING_TYPE (261)
ASSIGN (262) 6
SEMICOLON (263) 4
BOOLEAN_TYPE (264)
CLASS_IDENTIFIER (265)
NUMBER (266) 7
FLOAT (267) 8
STRING (268)
IDENTIFIER (269) 6 9
TRUE (270)
FALSE (271)
CONSOLE_LOG (272)
VAR (273)
CONST (274)
RETURN (275)
FUNCTION (276)
LBRACKET (277)
RBRACKET (278)
LBRACE (279)
RBRACE (280)
LPARENTHESES (281)
RPARENTHESES (282)
COMMA (283)
SINGLE_QUOTE (284)
ADD (285)
MINUS (286)
DOT (287)
DOUBLE_QUOTE (288)
MULT (289)
DIV (290)
EXP (291)
GT (292)
LT (293)
EQ (294)
BACKTICK (295)
DOLLAR (296)
REAL (297)
NUMERO (298)
BOOLEAN (299)
ERROR_LITERAL (300)
ANY_TYPE (301)
SUB (302)
MUL (303)
LPAREN (304)
RPAREN (305)
CRASIS_QUOTE (306)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
declarations (63)
    on left: 2 3, on right: 1 3
declaration (64)
    on left: 4 5, on right: 2 3
variavel_declaration (65)
    on left: 6, on right: 4 5
expression (66)
    on left: 7 8 9, on right: 6


State 0

    0 $accept: . program $end

    LET  shift, and go to state 1

    program               go to state 2
    declarations          go to state 3
    declaration           go to state 4
    variavel_declaration  go to state 5


State 1

    6 variavel_declaration: LET . IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: declarations .
    3 declarations: declarations . declaration

    LET  shift, and go to state 1

    $default  reduce using rule 1 (program)

    declaration           go to state 8
    variavel_declaration  go to state 5


State 4

    2 declarations: declaration .

    $default  reduce using rule 2 (declarations)


State 5

    4 declaration: variavel_declaration . SEMICOLON
    5            | variavel_declaration . '\n'

    SEMICOLON  shift, and go to state 9
    '\n'       shift, and go to state 10


State 6

    6 variavel_declaration: LET IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 11


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


State 9

    4 declaration: variavel_declaration SEMICOLON .

    $default  reduce using rule 4 (declaration)


State 10

    5 declaration: variavel_declaration '\n' .

    $default  reduce using rule 5 (declaration)


State 11

    6 variavel_declaration: LET IDENTIFIER ASSIGN . expression

    NUMBER      shift, and go to state 12
    FLOAT       shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    expression  go to state 15


State 12

    7 expression: NUMBER .

    $default  reduce using rule 7 (expression)


State 13

    8 expression: FLOAT .

    $default  reduce using rule 8 (expression)


State 14

    9 expression: IDENTIFIER .

    $default  reduce using rule 9 (expression)


State 15

    6 variavel_declaration: LET IDENTIFIER ASSIGN expression .

    $default  reduce using rule 6 (variavel_declaration)
